"use strict";

function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

(function (wp, ptbComponents, nonce) {
  "use strict";

  var __ = wp.i18n.__;
  var _wp$element = wp.element,
      Fragment = _wp$element.Fragment,
      createElement = _wp$element.createElement,
      RawHTML = _wp$element.RawHTML;
  var InspectorControls = wp.blockEditor.InspectorControls;
  var PanelBody = wp.components.PanelBody;
  var ProductTableColumns = ptbComponents.ProductTableColumns,
      ProductSelection = ptbComponents.ProductSelection,
      SettingsPanel = ptbComponents.SettingsPanel;
  var el = createElement;
  var tableIcon = el('svg', {
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24"
  }, wp.element.createElement('path', {
    d: "M4,21h15.893c1.103,0,2-0.897,2-2V7V5v0l0,0c0-1.103-0.897-2-2-2H4C2.897,3,2,3.897,2,5v14C2,20.103,2.897,21,4,21z M4,19 v-5h4v5H4z M14,7v5h-4V7H14z M8,7v5H4V7H8z M10,19v-5h4v5H10z M16,19v-5h3.894v5H16z M19.893,12H16V7h3.893V12z"
  }));
  wp.blocks.registerBlockType('barn2/wc-product-table', {
    title: 'WooCommerce Product Table',
    icon: tableIcon,
    category: 'woocommerce',
    attributes: {
      columns: {
        type: 'array',
        default: []
      },
      filters: {
        type: 'array',
        default: []
      },
      settings: {
        type: 'array',
        default: []
      }
    },
    supports: {
      html: false,
      align: ['wide', 'full']
    },
    edit: function edit(props) {
      var attributes = props.attributes,
          setAttributes = props.setAttributes;
      var productPreviewRef = wp.element.createRef();
      var settings = attributes.custom;
      var blockStructure = el(Fragment, null, [el(InspectorControls, null, [el(PanelBody, {
        title: __('Custom Parameters', 'wpt-block')
      }, [])]), el('div', {
        className: 'barn2-wc-product-table-block'
      }, [//el( 'h2', {}, 'Barn2 WooCommerce Product Table Block' ),
      el(ProductTableColumns, {
        columns: attributes.columns,
        onChange: function onChange(newColumns) {
          //console.log( changed );
          setAttributes({
            columns: newColumns
          });
        }
      }), el(ProductSelection, {
        columns: attributes.columns,
        onChange: function onChange(newFilters) {
          //console.log( changed );
          setAttributes({
            filters: newFilters
          });
        },
        attributes: attributes,
        ref: productPreviewRef
      }), el(SettingsPanel, {
        onChange: function onChange(newSettings) {
          //console.log( newSettings );
          setAttributes({
            settings: newSettings
          });
        },
        attributes: attributes
      })])]);
      return blockStructure;
    },
    save: function save(props) {
      var attrs = '';
      var attributes = props.attributes;

      if (attributes) {
        if (attributes.columns && attributes.columns.length) {
          attrs += ' columns="' + attributes.columns.join(',') + '"';
        }

        if (attributes.filters && attributes.filters.length) {
          var _iterator = _createForOfIteratorHelper(attributes.filters),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var filter = _step.value;
              attrs += " ".concat(filter.key, "=\"").concat(filter.value, "\"");
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }

        if (attributes.settings && attributes.settings.length) {
          var _iterator2 = _createForOfIteratorHelper(attributes.settings),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var setting = _step2.value;

              if (setting.value === '') {
                continue;
              }

              if (setting.key !== 'customFilters') {
                if (setting.key === 'filters' && setting.value === 'custom') {
                  continue;
                }

                attrs += " ".concat(setting.key, "=\"").concat(setting.value, "\"");
              } else {
                attrs += " filters=\"".concat(setting.value, "\"");
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }

        attrs = attrs.trim();

        if (attrs.length) {
          attrs = ' ' + attrs;
        }
      }

      return el(RawHTML, {}, "[product_table".concat(attrs, "]"));
    }
  });
})(window.wp, window.productTableBlockComponents, wcptbNonce);